<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFrameworks>net20;net30;net35;net40;net45;netstandard1.0;netstandard2.0</TargetFrameworks>

    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>

    <Title>Here</Title>
    <RootNamespace>Here</RootNamespace>
    <AssemblyName>Here</AssemblyName>

    <!-- Overridden by CI -->
    <Version>1.0.0</Version>
    <AssemblyVersion>1.0.0</AssemblyVersion>
    <FileVersion>1.0.0</FileVersion>

    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <!-- Include PDB files in NuGet for Source Link because symbolsource.org does not support portable PDBs -->
    <AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>

    <Copyright>Copyright © 2018</Copyright>
    <Description>.NET library that provide mainly functional features for C#.

This means concept of Option (Monad), Result and ValueObject.

Supported platforms:
- .NET Standard 1.0+
- .NET Core 1.0+
- .NET Framework 2.0+

Supports Source Link</Description>
    <Owners>Alexandre Rabérin</Owners>
    <Authors>Alexandre Rabérin</Authors>
    <Company>Alexandre Rabérin</Company>

    <IsPackable>true</IsPackable>
    <PackageId>Here</PackageId>
    <PackageReleaseNotes>➟ Release 0.7.0
- General:
    - Clean the library documentation.
    - Documentation of the library is now packaged.
    - Add support of Source Link.
    - Remove dependency to Jetbrains.Annotations, embed the code of some attributes internally.
    - The library is ReSharper compliant (use internal annotations recognized by ReSharper).
    - Remove target .NET Framework 4.5.2.
    - Annotate with "in" all functions parameters that support it.
    - WARNING: All existing classes/structs have been moved from their own namespaces to the Here namespace, and extensions to the Here.Extensions namespace.

- Maybe => Option:
    - Add extensions to unwrap the value embedded by Maybe&lt;T&gt;.
    - Add static helpers to check equality and compare Maybe&lt;T&gt; (allows custom comparer).
    - Maybe&lt;T&gt; is equatable with object of the wrapped type (also add a static helper for this).
    - Make structure readonly.
    - Rename Maybe&lt;T&gt; to Option&lt;T&gt;.

- Results:
    - Add extensions to unwrap the value embedded by results structures.
    - Add extensions to Flatten results structures.
    - Rename SuccessEquals static helpers to SuccessEqual.
    - Add static helpers to check equality and compare results structures (allows custom comparer).
    - Result structures with value are equatable with object of the wrapped type (also add a static helper for this).
    - Add cast methods on Result with value that perform a cast with the "as" operator.
    - Add extensions OnSuccess/OnFailure allowing to return an output value other than a result structure.
    - Make structures readonly.
    - Add factory method to create a result from an exception.

- ValueObject:
    - Add a first implementation of a base class for value objects.</PackageReleaseNotes>
    <PackageTags>Here Functional C# Option Maybe Result Monad</PackageTags>

    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <PackageLicenseUrl>https://opensource.org/licenses/MIT</PackageLicenseUrl>
    <PackageProjectUrl>https://github.com/KeRNeLith/Here</PackageProjectUrl>
    <RepositoryType>GitHub</RepositoryType>
    <RepositoryUrl>https://github.com/KeRNeLith/Here</RepositoryUrl>
  </PropertyGroup>

  <!-- C# configuration -->
  <PropertyGroup>
    <LangVersion>7.2</LangVersion>
  </PropertyGroup>

  <ItemGroup>
    <None Include="..\..\LICENSE" Pack="true" PackagePath="" />
  </ItemGroup>

  <!-- Optimization configurations -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <DefineConstants>JETBRAINS_ANNOTATIONS</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <!-- Targets defines -->
  <PropertyGroup Condition="'$(TargetFramework)'=='net20'">
    <DefineConstants>$(DefineConstants);NET20;SUPPORTS_BINARY_EXCEPTION_SERIALIZATION;$(AdditionalConstants)</DefineConstants>
  </PropertyGroup>
  <PropertyGroup Condition="'$(TargetFramework)'=='net30'">
    <DefineConstants>$(DefineConstants);NET30;SUPPORTS_BINARY_EXCEPTION_SERIALIZATION;$(AdditionalConstants)</DefineConstants>
  </PropertyGroup>
  <PropertyGroup Condition="'$(TargetFramework)'=='net35'">
    <DefineConstants>$(DefineConstants);NET35;SUPPORTS_BINARY_EXCEPTION_SERIALIZATION;$(AdditionalConstants)</DefineConstants>
  </PropertyGroup>
  <PropertyGroup Condition="'$(TargetFramework)'=='net40'">
    <DefineConstants>$(DefineConstants);NET40;SUPPORTS_BINARY_EXCEPTION_SERIALIZATION;$(AdditionalConstants)</DefineConstants>
  </PropertyGroup>
  <PropertyGroup Condition="'$(TargetFramework)'=='net45'">
    <DefineConstants>$(DefineConstants);NET45;SUPPORTS_BINARY_EXCEPTION_SERIALIZATION;$(AdditionalConstants)</DefineConstants>
  </PropertyGroup>
  <PropertyGroup Condition="'$(TargetFramework)'=='netstandard1.0'">
    <DefineConstants>$(DefineConstants);NETSTANDARD1_0;$(AdditionalConstants)</DefineConstants>
  </PropertyGroup>
  <PropertyGroup Condition="'$(TargetFramework)'=='netstandard2.0'">
    <DefineConstants>$(DefineConstants);NETSTANDARD2_0;SUPPORTS_BINARY_EXCEPTION_SERIALIZATION;$(AdditionalConstants)</DefineConstants>
  </PropertyGroup>

  <!-- Dependencies -->
  <ItemGroup>
    <PackageReference Include="Microsoft.SourceLink.GitHub" Version="1.0.0-beta-63127-02" PrivateAssets="All" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFramework)' == 'net20' OR '$(TargetFramework)' == 'net30'">
    <PackageReference Include="System.Core" Version="3.5.21022.801" />
  </ItemGroup>
</Project>